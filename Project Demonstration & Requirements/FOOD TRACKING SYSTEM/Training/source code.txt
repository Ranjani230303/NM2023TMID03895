FOOD TRACKING SYSTEM:
INPUT:
// SPDX-License-Identifier: MIT pragma solidity ^0.8.0;
contract FoodTracking { address public owner;
enum FoodStatus {
Unverified,
Verified,
Consumed
}
struct FoodItem {
string itemId; string productName; string origin; uint256 sentTimestamp; FoodStatus status;
}
mapping(string => FoodItem)
public foodItems;
event FoodItemSent( string indexed itemId, string productName, string origin,
uint256 sentTimestamp
);
event FoodItemVerified(string
indexed itemId); event FoodItemConsumed(string
indexed itemId);
constructor() {
owner = msg.sender;
}
modifier onlyOwner() {
require(msg.sender == owner,
"Only contract owner can call this");
_;
}
modifier onlyUnconsumed(string memory itemId) {
require(
foodItems[itemId].status == FoodStatus.Verified,
"Item is not verified or already consumed"
);
_;
}
function sendFoodItem(
string memory itemId, string memory productName, string memory origin
) external onlyOwner { require( bytes(foodItems[itemId].itemId).len gth == 0,
"Item already exists"
);
foodItems[itemId] = FoodItem({ itemId: itemId, productName: productName,
origin: origin, sentTimestamp:
block.timestamp, status: FoodStatus.Unverified
});
emit FoodItemSent(itemId,
productName, origin, block.timestamp);
}
function verifyFoodItem(string
memory itemId) external onlyOwner
{
require(
bytes(foodItems[itemId].itemId).len
gth > 0,
"Item does not exist"
);
require(
foodItems[itemId].status == FoodStatus.Unverified,
"Item is already verified or consumed"
);
foodItems[itemId].status =
FoodStatus.Verified;
emit FoodItemVerified(itemId);
}
function consumeFoodItem(
string memory itemId
) external onlyUnconsumed(itemId) { foodItems[itemId].status = FoodStatus.Consumed;
emit
FoodItemConsumed(itemId);
}
function getFoodItemDetails(
string memory itemId
)
external view
returns (string memory, string
memory, uint256, FoodStatus)
{
FoodItem memory item =
foodItems[itemId]; return (item.productName,
item.origin, item.sentTimestamp,
item.status);
} }
ABI CODE:
[
{
"inputs": [],
"stateMutability": "nonpayable",
"type": "constructor"
},
{
"anonymous": false,
"inputs": [
{
"indexed": true,
"internalType": "string",
"name": "itemId",
"type": "string"
}
],
"name": "FoodItemConsumed", "type": "event"
},
{
"anonymous": false,
"inputs": [
{
"indexed": true,
"internalType": "string",
"name": "itemId",
"type": "string"
},
{
"indexed": false,
"internalType": "string",
"name": "productName",
"type": "string"
},
{
"indexed": false,
"internalType": "string",
"name": "origin",
"type": "string"
},
{
"indexed": false, "internalType": "uint256",
"name": "sentTimestamp",
"type": "uint256"
}
],
"name": "FoodItemSent",
"type": "event"
},
{
"anonymous": false,
"inputs": [
{
"indexed": true,
"internalType": "string",
"name": "itemId",
"type": "string"
}
],
"name": "FoodItemVerified",
"type": "event"
},
{
"inputs": [
{
"internalType": "string",
"name": "itemId",
"type": "string"
}
],
"name": "consumeFoodItem",
"outputs": [],
"stateMutability": "nonpayable",
"type": "function"
},
{
"inputs": [
{
"internalType": "string",
"name": "",
"type": "string"
}
],
"name": "foodItems",
"outputs": [
{
"internalType": "string",
"name": "itemId",
"type": "string"
},
{
"internalType": "string",
"name": "productName",
"type": "string"
},
{
"internalType": "string",
"name": "origin",
"type": "string"
},
{
"internalType": "uint256",
"name": "sentTimestamp",
"type": "uint256"
},
{
"internalType": "enum
FoodTracking.FoodStatus",
"name": "status",
"type": "uint8"
}
],
"stateMutability": "view",
"type": "function"
},
{
"inputs": [
{
"internalType": "string",
"name": "itemId",
"type": "string"
}
],
"name": "getFoodItemDetails",
"outputs": [
{
"internalType": "string",
"name": "",
"type": "string"
},
{
"internalType": "string",
"name": "",
"type": "string"
},
{
"internalType": "uint256",
"name": "",
"type": "uint256"
},
{
"internalType": "enum FoodTracking.FoodStatus",
"name": "",
"type": "uint8"
}
],
"stateMutability": "view",
"type": "function"
},
{
"inputs": [],
"name": "owner",
"outputs": [
{
"internalType": "address",
"name": "",
"type": "address"
}
],
"stateMutability": "view",
"type": "function"
},
{
"inputs": [
{
"internalType": "string",
"name": "itemId",
"type": "string"
},
{
"internalType": "string",
"name": "productName",
"type": "string"
},
{
"internalType": "string",
"name": "origin",
"type": "string"
}
],
"name": "sendFoodItem",
"outputs": [],
"stateMutability": "nonpayable",
"type": "function"
},
{
"inputs": [
{
"internalType": "string",
"name": "itemId",
"type": "string"
}
],
"name": "verifyFoodItem",
"outputs": [],
"stateMutability": "nonpayable",
"type": "function"
}
]
BYTE CODE:
6080604052348015610010576000
80fd5b50336000806101000a81548
173ffffffffffffffffffffffffffffffffffffffff 021916908373ffffffffffffffffffffffffff ffffffffffffff1602179055506115c380 6100606000396000f3fe608060405 234801561001057600080fd5b5060 0436106100625760003560e01c80
6308f52751146100675780632b442
6c91461009a578063820cfd261461
00b65780638da5cb5b146100ea57 806391acc17214610108578063ca2 f564714610124575b600080fd5b61 0081600480360381019061007c91 90610c73565b610140565b604051 6100919493929190610dcb565b60
405180910390f35b6100b46004803
6038101906100af9190610c73565b
610392565b005b6100d060048036 038101906100cb9190610c73565b
6104b8565b6040516100e1959493 929190610e1e565b604051809103
90f35b6100f26106a9565b6040516
100ff9190610ec7565b6040518091
0390f35b610122600480360381019
061011d9190610ee2565b6106cd5 65b005b61013e600480360381019
06101399190610c73565b6108f856
5b005b6060806000806000600186
6040516101589190610fc5565b908
1526020016040518091039020604 0518060a00160405290816000820
180546101819061100b565b80601f
0160208091040260200160405190
8101604052809291908181526020 018280546101ad9061100b565b80
156101fa5780601f106101cf576101
0080835404028352916020019161
01fa565b820191906000526020600 020905b815481529060010190602
0018083116101dd57829003601f16
8201915b50505050508152602001 6001820180546102139061100b56
5b80601f016020809104026020016 0405190810160405280929190818
15260200182805461023f9061100b 565b801561028c5780601f1061026
1576101008083540402835291602 0019161028c565b8201919060005
26020600020905b8154815290600
1019060200180831161026f578290 03601f168201915b5050505050815
26020016002820180546102a5906
1100b565b80601f01602080910402
6020016040519081016040528092 91908181526020018280546102d1 9061100b565b801561031e578060
1f106102f35761010080835404028
352916020019161031e565b82019
1906000526020600020905b81548
1529060010190602001808311610
30157829003601f168201915b5050
5050508152602001600382015481 5260200160048201600090549061
01000a900460ff166002811115610
35657610355610d54565b5b60028 1111561036857610367610d54565 b5b8152505090508060200151816 0400151826060015183608001519 4509450945094505091935091935
65b80600160028111156103a7576
103a6610d54565b5b60018260405
16103b79190610fc5565b90815260
2001604051809103902060040160
009054906101000a900460ff16600
28111156103e8576103e7610d545 65b5b14610428576040517f08c379 a000000000000000000000000000 0000000000000000000000000000 00815260040161041f906110ae565 b60405180910390fd5b6002600183 60405161043a9190610fc5565b908
1526020016040518091039020600
40160006101000a81548160ff0219
169083600281111561046d576104 6c610d54565b5b02179055508160 40516104809190610fc5565b60405
180910390207f10903cdad98900af
2897d7e63e43696fd2ff20b6b781cc
35e32cc9ecada0c2ec60405160405
180910390a25050565b600181805
1602081018201805184825260208
3016020850120818352809550505 0505050600091509050806000018
0546104f19061100b565b80601f01
6020809104026020016040519081 0160405280929190818152602001
82805461051d9061100b565b8015
61056a5780601f1061053f5761010
0808354040283529160200191610 56a565b820191906000526020600 020905b815481529060010190602
00180831161054d57829003601f16
8201915b50505050509080600101
805461057f9061100b565b80601f0
1602080910402602001604051908 1016040528092919081815260200 18280546105ab9061100b565b801
56105f85780601f106105cd576101
0080835404028352916020019161
05f8565b820191906000526020600
020905b815481529060010190602
0018083116105db57829003601f16
8201915b50505050509080600201
805461060d9061100b565b80601f0
1602080910402602001604051908
1016040528092919081815260200
18280546106399061100b565b801
56106865780601f1061065b576101
0080835404028352916020019161
0686565b82019190600052602060
0020905b81548152906001019060
200180831161066957829003601f1
68201915b5050505050908060030 1549080600401600090549061010
00a900460ff16905085565b600080 54906101000a900473fffffffffffffffff fffffffffffffffffffffff1681565b600080 54906101000a900473fffffffffffffffff fffffffffffffffffffffff1673ffffffffffffffff ffffffffffffffffffffffff163373ffffffffffff ffffffffffffffffffffffffffff161461075b5
76040517f08c379a0000000000000
0000000000000000000000000000 0000000000000000815260040161
075290611140565b604051809103
90fd5b600060018460405161076d9
190610fc5565b9081526020016040
5180910390206000018054610789
9061100b565b9050146107cb5760
40517f08c379a0000000000000000
0000000000000000000000000000
000000000000081526004016107c
2906111ac565b60405180910390fd
5b6040518060a001604052808481
5260200183815260200182815260 2001428152602001600060028111 1561080257610801610d54565b5b 8152506001846040516108159190
610fc5565b9081526020016040518
0910390206000820151816000019
0816108389190611378565b50602 082015181600101908161084e919 0611378565b50604082015181600 20190816108649190611378565b5
0606082015181600301556080820 1518160040160006101000a81548
160ff021916908360028111156108
9a57610899610d54565b5b021790 5550905050826040516108b09190 610fc5565b60405180910390207f1 deb5b3f1332885a208a3b03c4438c 7daad01496d32418f03019bade53c
0841e8383426040516108eb93929 19061144a565b60405180910390a
2505050565b60008054906101000 a900473ffffffffffffffffffffffffffffffffff ffffff1673fffffffffffffffffffffffffffffffff fffffff163373fffffffffffffffffffffffffffff fffffffffff1614610986576040517f08 c379a00000000000000000000000 0000000000000000000000000000
000000815260040161097d906111
40565b60405180910390fd5b60006
001826040516109989190610fc556
5b90815260200160405180910390 2060000180546109b49061100b56
5b9050116109f6576040517f08c37
9a00000000000000000000000000 0000000000000000000000000000 00081526004016109ed906114db5
65b60405180910390fd5b60006002
811115610a0a57610a09610d5456 5b5b600182604051610a1a919061
0fc5565b908152602001604051809
1039020600401600090549061010 00a900460ff166002811115610a4b
57610a4a610d54565b5b14610a8b
576040517f08c379a000000000000
0000000000000000000000000000
0000000000000000081526004016 10a829061156d565b60405180910
390fd5b60018082604051610a9c91 90610fc5565b90815260200160405 1809103902060040160006101000 a81548160ff021916908360028111 15610acf57610ace610d54565b5b0
21790555080604051610ae291906
10fc5565b60405180910390207f36 8cb808019f63c8cdd7e7087e42db5 b33818a846fdd80e9527664749152 415860405160405180910390a250 565b6000604051905090565b6000
80fd5b600080fd5b600080fd5b600
080fd5b6000601f19601f83011690
50919050565b7f4e487b710000000 0000000000000000000000000000
0000000000000000000006000526
04160045260246000fd5b610b8082 610b37565b810181811067ffffffffff ffffff82111715610b9f57610b9e610 b48565b5b80604052505050565b6 000610bb2610b19565b9050610bb e8282610b77565b919050565b600 067ffffffffffffffff821115610bde576 10bdd610b48565b5b610be782610 b37565b905060208101905091905 0565b82818337600083830152505 050565b6000610c16610c1184610 bc3565b610ba8565b90508281526 0208101848484011115610c32576
10c31610b32565b5b610c3d84828
5610bf4565b509392505050565b60
0082601f830112610c5a57610c596

